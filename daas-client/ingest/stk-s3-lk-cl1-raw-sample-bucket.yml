AWSTemplateFormatVersion: 2010-09-09
Description: Sample Raw bucket for data lake as a service - client (DaaS - Client)

Parameters:
  DaasCoreAccountId:
    Type: String
    Default: false
  DaasCoreEntity:
    Type: String
    Default: false
  Entity:
    Type: String
    Default: ganesh
  Environment:
    Type: String
    Default: dev
  EventQueueArn:
    Type: String
    Default: false

Conditions:
  HasEventQueueArn: !Not [!Equals [!Ref EventQueueArn, false]]

# Create Resources
Resources:
  CreateDaaSRawcl1RawBucket:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      Parameters:
        Entity: !Ref Entity      
        Environment: !Sub ${Environment}
        Name: !Sub ${Entity}-s3-${AWS::Region}-lk-cl1-raw-sample-bucket
        EventQueueArn: !Ref EventQueueArn
      TemplateURL: ../../daas-common/cft-s3-common-template.yml
      TimeoutInMinutes: '60'

  CreateDaaSRawcl1BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    DependsOn: CreateDaaScl1RawBucket
    Properties:
      Bucket: !Sub ${Entity}-s3-${AWS::Region}-lk-cl1-raw-sample-bucket-${Environment}
      PolicyDocument:
        Statement:
          - Sid: Allow DaaS Core Role access
            Effect: Allow
            Principal: 
              AWS:
                - !Sub arn:aws:iam::${DaasCoreAccountId}:role/rle-${DaasCoreEntity}-lmd-ingest-invoker-${Environment}
                - !Sub arn:aws:iam::${DaasCoreAccountId}:role/rle-${DaasCoreEntity}-lmd-excel-processor-${Environment}
                - !Sub arn:aws:iam::${DaasCoreAccountId}:role/rle-${DaasCoreEntity}-lmd-xml-processor-${Environment}
            Action:
              - "s3:GetObject"
              - "s3:GetBucketPolicy"
              - "s3:PutObject"
              - "s3:PutBucketPolicy"
              - "s3:DeleteObject"
              - "s3:PutObjectAcl"
              - "s3:ListBucket"
            Resource:
              - !Sub arn:aws:s3:::${CreateDaaSRawcl1RawBucket.Outputs.S3BucketName}
              - !Sub arn:aws:s3:::${CreateDaaSRawcl1RawBucket.Outputs.S3BucketName}/*
            Condition:
              StringEquals:
                'aws:PrincipalOrgID': !Ref OrganizationId
          - Sid: Deny insecure access
            Effect: Deny
            Principal: "*"
            Action: "*"
            Resource:
              - !Sub arn:aws:s3:::${CreateDaaSRawcl1RawBucket.Outputs.S3BucketName}
              - !Sub arn:aws:s3:::${CreateDaaSRawcl1RawBucket.Outputs.S3BucketName}/*
            Condition:
              Bool:
                "aws:SecureTransport": false

  OrganizationId:
      Type: 'AWS:CloudFormation::CustomResource'
      Properties:
        ServiceToken: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Entity}-organization-id-${Environment}