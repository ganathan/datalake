{
    "Comment": "A event processor pipeline",
    "StartAt": "Event process decider",
    "States": {
      "Event process decider": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.extension",
            "StringEquals": "xml",
            "Next": "XML processor lambda"
          },
          {
            "Variable": "$.extension",
            "StringEquals": "xlsx",
            "Next": "Excel processor lambda"
          },
          {
            "Variable": "$.extension",
            "StringEquals": "xls",
            "Next": "Excel processor lambda"
          }
        ]
      },
      "XML processor lambda": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "OutputPath": "$.Payload",
        "Parameters": {
          "Payload.$": "$",
          "FunctionName": "${LambdaArnString}:${Entity}-lmd-xml-processor-${Environment}"
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException"
            ],
            "IntervalSeconds": 2,
            "MaxAttempts": 6,
            "BackoffRate": 2
          }
        ],
        "End": true
      },
      "Excel processor lambda": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "OutputPath": "$.Payload",
        "Parameters": {
          "Payload.$": "$",
          "FunctionName": "${LambdaArnString}:${Entity}-lmd-excel-processor-${Environment}"
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException"
            ],
            "IntervalSeconds": 2,
            "MaxAttempts": 6,
            "BackoffRate": 2
          }
        ],
        "End": true
      }
    }
  }